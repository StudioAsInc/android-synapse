name: Gemini CLI

# Triggers: PRs, Issues, comments, pushes and manual runs
on:
  pull_request:
    types: [opened, synchronize, reopened]
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  push:
    branches: [ main ]
  workflow_dispatch:

# Minimal permissions the action needs to operate (adjust if you want less/more)
permissions:
  contents: read
  issues: write
  pull-requests: write
  checks: write
  actions: read
  id-token: write

jobs:
  gemini:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # (optional) If you want the repo files available under a predictable path,
      # you might fetch submodules or LFS here — otherwise checkout is usually enough.

      - name: Run Gemini CLI
        uses: google-github-actions/run-gemini-cli@v0.1.12
        with:
          # Use the GEMINI_API_KEY secret (recommended). If you use Google Cloud WIF or Vertex, see README.
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}

          # Optional inputs — adjust as needed:
          gemini_cli_version: latest        # pin a version if you prefer
          gemini_debug: false               # set true when debugging
          # gemini_model: "gpt-..."         # optionally pin model
          # use_gemini_code_assist: false   # set true if using Gemini Code Assist
          # use_vertex_ai: false           # set true if you want Vertex AI (configure GCP vars)
        env:
          # Optional — if you created a custom GitHub App and are using app-based auth,
          # set these repository variables/secrets as described in the action README:
          # APP_ID (repo variable) and APP_PRIVATE_KEY (secret) are supported.
          APP_ID: ${{ vars.APP_ID }}               # optional: repo variable (App ID)
          # APP_PRIVATE_KEY is expected as a secret (pem contents). If you use it, set it in repo secrets:
          # APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}